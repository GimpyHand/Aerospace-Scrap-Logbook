Index: pyqt_db_version.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pyqt_db_version.py b/V3.py
rename from pyqt_db_version.py
rename to V3.py
--- a/pyqt_db_version.py	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ b/V3.py	(date 1725969039781)
@@ -11,7 +11,7 @@
 # Path to the SQLite database file
 db_file_path = r'X:\AEROSPACE\Aerospace YWG Scrap Parts Logbook\scrap_logbook.db'
 
-class ScrapLogbook(QMainWindow):
+class crapLogbook(QMainWindow):
     def __init__(self):
         super().__init__()
         self.setWindowTitle("Cadorath Aerospace Scrap Logbook")
Index: utilities.py
===================================================================
diff --git a/utilities.py b/utilities.py
deleted file mode 100644
--- a/utilities.py	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ /dev/null	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
@@ -1,17 +0,0 @@
-from datetime import datetime
-import webbrowser
-import tkinter as tk
-
-def insert_current_date(entry_date):
-    """
-    Inserts the current date into a Tkinter entry widget in YYYY-MM-DD format.
-    """
-    current_date = datetime.now().strftime('%Y-%m-%d')
-    entry_date.delete(0, tk.END)
-    entry_date.insert(0, current_date)
-
-def open_mailto():
-    """
-    Opens a mailto link in the default mail client.
-    """
-    webbrowser.open('mailto:alex.jessup@cadorath.com?subject=Scrap%20Log%20Issue')
Index: file_handler.py
===================================================================
diff --git a/file_handler.py b/file_handler.py
deleted file mode 100644
--- a/file_handler.py	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ /dev/null	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
@@ -1,22 +0,0 @@
-import os
-import shutil
-
-def copy_xlsm_files(source_dir, destination_dir):
-    """
-    Copies .xlsm files from the source directory (recursively) to the destination directory.
-    """
-    # Create the destination directory if it doesn't exist
-    os.makedirs(destination_dir, exist_ok=True)
-
-    # Loop through all files in the source directory recursively
-    for dirpath, dirnames, filenames in os.walk(source_dir):
-        for file_name in filenames:
-            # Check if the file is an xlsm file
-            if file_name.endswith('.xlsm'):
-                # Construct the full file path
-                source_file_path = os.path.join(dirpath, file_name)
-                destination_file_path = os.path.join(destination_dir, file_name)
-
-                # Copy the file to the destination directory
-                shutil.copy2(source_file_path, destination_file_path)
-                print(f"Copied: {file_name}")
Index: gui_handler.py
===================================================================
diff --git a/gui_handler.py b/gui_handler.py
deleted file mode 100644
--- a/gui_handler.py	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ /dev/null	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
@@ -1,150 +0,0 @@
-import tkinter as tk
-from tkinter import messagebox
-from data_handler import load_logbook_data, save_to_csv
-from utilities import insert_current_date
-
-
-def setup_gui(root, form_frame, table_frame, csv_file_path, part_lookup):
-    """
-    Sets up the Tkinter GUI layout, form, and table.
-    """
-
-    # Function to submit data to the CSV file
-    def submit_data():
-        # Get values from the form
-        date = entry_date.get().strip()
-        initials = entry_initials.get().strip()
-
-        # Check if required fields are filled out
-        if not date or not initials:
-            missing_fields = []
-            if not date:
-                missing_fields.append("Date")
-            if not initials:
-                missing_fields.append("Initials")
-
-            # Show error message box indicating which fields are missing
-            messagebox.showerror("Missing Information",
-                                 f"Please fill out the following required field(s): {', '.join(missing_fields)}")
-            return
-
-        # Validate the date format
-        try:
-            from datetime import datetime
-            datetime.strptime(date, '%Y-%m-%d')
-        except ValueError:
-            messagebox.showerror("Invalid Date", "Please enter the date in YYYY-MM-DD format.")
-            return
-
-        # If both required fields are filled and valid, proceed with submission
-        wo = entry_wo.get().strip()
-        part_number = entry_part_number.get().strip()
-        part_description = part_lookup.get(part_number, "")  # Get part description from lookup
-        serial_number = entry_serial_number.get().strip()
-        remarks = entry_remarks.get().strip()
-
-        # Append the data to the CSV file
-        new_data = {
-            "Date": date,
-            "W/O": wo,
-            "Part Number": part_number,
-            "Part Description": part_description,
-            "Serial Number": serial_number,
-            "Initials": initials,
-            "Remarks": remarks
-        }
-        save_to_csv(csv_file_path, new_data)
-
-        # Refresh the displayed data
-        load_data()
-
-        # Clear the form after submission
-        clear_form()
-
-    # Function to clear the form fields
-    def clear_form():
-        entry_date.delete(0, tk.END)
-        entry_wo.delete(0, tk.END)
-        entry_part_number.delete(0, tk.END)
-        entry_part_description.delete(0, tk.END)
-        entry_serial_number.delete(0, tk.END)
-        entry_initials.delete(0, tk.END)
-        entry_remarks.delete(0, tk.END)
-
-    # Function to load and display the last 20 records from the CSV file
-    def load_data():
-        df = load_logbook_data(csv_file_path)
-
-        # Clear the current table display
-        for widget in table_frame.winfo_children():
-            widget.destroy()
-
-        if not df.empty:
-            column_widths = {
-                'Date': 120,
-                'W/O': 80,
-                'Part Number': 150,
-                'Part Description': 300,
-                'Serial Number': 120,
-                'Initials': 80,
-                'Remarks': 475
-            }
-
-            # Display the table headers with bold text
-            for i, col in enumerate(df.columns):
-                header = tk.Label(table_frame, text=col, borderwidth=1, relief="solid", bg='lightblue', anchor='center',
-                                  padx=5, pady=5, font=('Arial', 10, 'bold'))
-                header.grid(row=0, column=i, sticky="nsew")
-                table_frame.grid_columnconfigure(i, minsize=column_widths.get(col, 100))
-
-            # Display the table data
-            for i, row in df.iterrows():
-                for j, value in enumerate(row):
-                    color = 'white' if i % 2 == 0 else 'lightgrey'
-                    cell = tk.Label(table_frame, text=value, borderwidth=1, relief="solid", bg=color, anchor='center',
-                                    padx=5, pady=5)
-                    cell.grid(row=i + 1, column=j, sticky="nsew")
-
-        table_frame.grid_rowconfigure(0, weight=1)
-
-    # Create and place form labels and entries
-    tk.Label(form_frame, text="*Date (YYYY-MM-DD):", fg="red").grid(row=0, column=0, padx=5, pady=5, sticky='e')
-    entry_date = tk.Entry(form_frame, justify='center')
-    entry_date.grid(row=0, column=1, padx=5, pady=5, sticky='ew')
-
-    btn_date = tk.Button(form_frame, text="ðŸ“…", command=lambda: insert_current_date(entry_date))
-    btn_date.grid(row=0, column=2, padx=5, pady=5, sticky='w')
-
-    tk.Label(form_frame, text="W/O:").grid(row=1, column=0, padx=5, pady=5, sticky='e')
-    entry_wo = tk.Entry(form_frame, justify='center')
-    entry_wo.grid(row=1, column=1, padx=5, pady=5, sticky='ew')
-
-    tk.Label(form_frame, text="Part Number:").grid(row=2, column=0, padx=5, pady=5, sticky='e')
-    entry_part_number = tk.Entry(form_frame, justify='center')
-    entry_part_number.grid(row=2, column=1, padx=5, pady=5, sticky='ew')
-
-    tk.Label(form_frame, text="Part Description:").grid(row=3, column=0, padx=5, pady=5, sticky='e')
-    entry_part_description = tk.Entry(form_frame, justify='center')
-    entry_part_description.grid(row=3, column=1, padx=5, pady=5, sticky='ew')
-
-    tk.Label(form_frame, text="Serial Number:").grid(row=4, column=0, padx=5, pady=5, sticky='e')
-    entry_serial_number = tk.Entry(form_frame, justify='center')
-    entry_serial_number.grid(row=4, column=1, padx=5, pady=5, sticky='ew')
-
-    tk.Label(form_frame, text="*Initials:", fg="red").grid(row=5, column=0, padx=5, pady=5, sticky='e')
-    entry_initials = tk.Entry(form_frame, justify='center')
-    entry_initials.grid(row=5, column=1, padx=5, pady=5, sticky='ew')
-
-    tk.Label(form_frame, text="Remarks:").grid(row=6, column=0, padx=5, pady=5, sticky='e')
-    entry_remarks = tk.Entry(form_frame, justify='center')
-    entry_remarks.grid(row=6, column=1, padx=5, pady=5, sticky='ew')
-
-    # Create and place buttons
-    btn_submit = tk.Button(form_frame, text="Submit", command=submit_data)
-    btn_submit.grid(row=7, column=0, padx=5, pady=5, sticky='ew')
-
-    btn_clear = tk.Button(form_frame, text="Clear", command=clear_form)
-    btn_clear.grid(row=7, column=1, padx=5, pady=5, sticky='ew')
-
-    # Load and display the data in the table
-    load_data()
Index: Scrap Parts Numbers + Descriptions.csv
===================================================================
diff --git a/Scrap Parts Numbers + Descriptions.csv b/Scrap Parts Numbers + Descriptions.csv
deleted file mode 100644
--- a/Scrap Parts Numbers + Descriptions.csv	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ /dev/null	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
@@ -1,607 +0,0 @@
-6731183,Accessory Main Drive
-6738408,Gear Center-Accessory Drive
-6738444,Accessory Idler Gear
-6782790,Side Accessory Drive
-6787344,Acc Dr Side Shaftgear
-6792040,Prop Brake Inner Cone
-6793065,"Cap, Oil Filter"
-6793309,Accessory Main Drive Gear Shaft
-6808390,Tube
-6824043,Tachometer And Oil Pump Drive Spur Gear
-6824044,Pump Drive Idler Spur
-6824774,Eyebolt
-6824977,Idler Gear
-6827887,Starter Shaft
-6829388,Nose Scavenge Pump
-6829394,Starter Gear
-6829451,Prop Brake Outer  
-6840109,Retainer
-6840407,Spanner Nut
-6840535,"Bearing, Roller, (30 X 62 X 16 Mm)"
-6841213,3Rd Stage Compressor Wheel
-6841228,Pinion Shaft Gear
-6842657,Prop Shaft
-6843499,Firewall
-6844778,Turbine Tie Bolt
-6845884,Gp Support
-6845945,Compressor Tie Bolt
-6846215,Accessory Drive
-6846935,Turbine Front Brg Cage
-6850825,Oil Pump Dr Spur Gear
-6851430,Rear Difffuser
-6851531,#4 Nozzle
-6851574,Scroll
-6852738,"Diffuser Assy, Compressor Front"
-6853265,Gearshaft Pt Tach & Gov
-6853279,#4 Wheel
-6853301,Sump Can
-6853366,Bracket
-6853441,Pressure Body
-6853444,Oil Pump Cover
-6853446,Gearshaft
-6853511,Ex Collector
-6853540,Pump Assy
-6853542,Scavenge Oil Pump Body
-6853543,Body Seperator
-6853544,Oil Pump Cover
-6854056,Bracket
-6854393,Lab Stator Seal
-6854851,"Gearshaft Assy, Spur, Fuel Pump Drive"
-6854857,"Gearshaft, Spur, Gas Producer Train Idler"
-6854977,Gear
-6856362,"Piston Assy, Torquemeter"
-6857394,Pt Support
-6858182,Rear Carrier
-6859367,Tm Shaft
-6859431,"Bearing, Ball, 12 X 28 X 8 Mm"
-6859542,Pump Body Scav
-6870031,Iinner Bearing Race
-6870032,Filter Assy
-6870058,Exciter
-6870769,Fuel Control
-6870811,Front Diffuser
-6870813,Diffuser 
-6870832,Pinion Gear
-6870855,Lead Igh. Assy
-6870891,"Exciter Assy, Ignition, High Energy"
-6870925,Seperator
-6870941,T/M Helical G/S
-6871218,Tm Gearshaft
-6871259,Compressor Tie Bolt
-6871486,Combustion Liner
-6871499,Compressor Rotor Assy
-6871502,Bearing
-6871508,Bearing
-6871534,Plug
-6871540,Clamp
-6873667,Main Diaphragm
-6874816,Bleed Valve Stem
-6874884,Rear Diffuser
-6875004,Bearing
-6875485,N1 Coupling
-6875622,Tube
-6875778,Pt Support
-6876528,Starter Generator
-6876529,Fuel Gearshaft
-6876617,Check Valve
-6876654,#4 Comp Wheel
-6876655,#5 Wheel Compressor
-6876656,#6 Comp Wheel
-6876667,Air Tube
-6876688,Oil Pump Body
-6876814,"Thermocouple Assy, Turbine "
-6876878,"Nut, Spanner, Special Lock, Lh"
-6876925,Tube Assy Oil Filter
-6877143,#3 Nozzle
-6877171,Gear Box Housing
-6877513,Prop Shaft
-6878767,Lpt Bearing Sleeve Seal
-6879867,# 3 Turbine Nozzle
-6879879,Ex Collector
-6886407,1St Turbine Wheel
-6887160,Tube
-6887761,Thermocouple
-6887772,"Bearing, Roller, (40 X 68 X 15 Mm)"
-6888527,Gearshaft
-6888529,Starter Gen Gear
-6888547,"Sump Cover, Pt"
-6888602,"Slinger, Oil, Gas Producer Turbine Bearing Front"
-6889069,Shaft Pinion
-6889094,"Gearshaft, Spur, Gas Producer Train Idler"
-6889158,Tm Shaft
-6889167,Oil Pump Cover
-6889168,Oil Pump Cover
-6889358,Main Drive Gear
-6889700,Helical Gear
-6889701,Tm Helical Gear
-6890040,#1 Nozzle Shield
-6890501,#1 Comp Wheel
-6890502,#2/3 Comp Wheel
-6890530,Front Support
-6890584,Tube
-6890804,Sump Cover
-6890917,Fuel Nozzle Assy
-6892070,"Housing Assy, Filter, Lube Oil"
-6892071,Oil Pump Body
-6892285,Starter Gen
-6892826,Drain Fitting
-6893037,Filter
-6893614,"Nut, Spanner, 1.1875-28 Lh"
-6893617,Bearing Housing
-6893626,Tube
-6893656,Oil Pump Body
-6893662,Spur Gearshaft
-6893673,T/M Gear
-6895005,Plate
-6895007,Bearing
-6895010,Gp Support
-6895079,Gearbox Cover
-6895093,Oil Filter Housing
-6895800,Air Tube
-6895832,Tube
-6896094,Gear Box Housing
-6896407,Front Support
-6896437,Fuel Gear
-6896888,Scroll
-6896892,Gearbox Cover
-6898560,Tube
-6898561,Adapter Coupling
-6898607,"Bearing, Ball, (10 X 26 X 8 Mm) No. 1 Main"
-6898663,"Wheel, Turbine, 3Rd Stage"
-6898675,Lab Seal
-6898730,Pt Support
-6898731,Pt Support
-6898764,Oil Seal Assy
-6898782,Second Turbine Wheel
-6898784,Splined Adapter
-6898785,Pto Gearshaft
-6898824,Manifold
-6898826,T/M Gear
-6898835,"Gearshaft, Helical & Spur"
-6898847,Tube
-6898945,Gp Support Bearing Oil
-6898958,Oil Nozzle
-6898967,#3 Turbine Wheel
-6898976,Pressure Tee Assy(4)
-6898981,Idler Gear
-6898989,"Body Assy, Oil Pressure Reducer"
-6899130,Comp Bleed Valve Cover
-6899156,Fuel Control Gearshaft
-6899185,Tube 
-6899191,Tube
-6899226,Oil Housing Assy
-6899373,3Rd Stg Wheel
-6899402,Pto Gearshaft
-23001801,Coupling Nut
-23001819,Oil Nozzle
-23001832,Oil Nozzle
-23001934,Pt Support
-23001967,3Rd Stg Wheel
-23004529,Comb Liner
-23004553,"Bearing, Ball, (40 X 68 X 15 Mm)"
-23004963,Harness 
-23005204,"Hose Assy, Fireshield To Fuel Nozzle, No. 4, X 17.75"
-23005217,Housing
-23005271,"Adapter, Spline, Compressor Rotor"
-23005366,Bleed Valve
-23005369,Bleed Valve
-23005743,Blanket
-23007151,Bearing
-23007189,#3 Nozzle
-23007202,Bearing
-23007217,Mount
-23007246,77 Teeth Idler Gear
-23007981,N2 Pick Up
-23008019,Gearbox Cover
-23008021,Gearbox Housing
-23008030,Turbine Tie Bolt
-23008061,Exhaust Collector
-23008062,Exhaust Collector
-23008065,"Bearing, Ball, (17 X 30 X 7 Mm)"
-23008555,Blanket
-23008867,7Th Stage Compressor Wheel
-23009670,#2 Bearing
-23009851,Terminal
-23030880,"Filter Element, Lube Oil"
-23030910,Outer Combustion Case
-23030911,Occ
-23030954,Inner Shaft
-23030981,Inner Coupling Nut
-23030982,Coupling Nut(4)
-23030986,Pump Seperator
-23030989,Oil Pump Idler Spur Gear
-23030990,Spur Gearshaft
-23030991,Cover Seperator
-23030993,Coupling
-23030999,Oil Pump Body
-23031260,Combustion Case
-23031403,Gearbox Housing 
-23031426,#4 Nozzle Turbine
-23031456,Pump Assy
-23031459,Pump Assy
-23031461,Scavenger Body
-23031478,Bearing #8
-23031494,Lab Seal
-23031496,Roller Bearing
-23031909,Cont Ring
-23031922,Spur Gear
-23032286,Gearbox Cover
-23032325,Exhaust Collector
-23032327,Lab Seal
-23032345,Coupling
-23032621,Stg 1 Comp Wheel
-23032626,Vane Diffuser
-23033111,Exhaust Collector
-23033112,Exhaust Collector
-23033403,#3 Nozzle
-23033721,1St Stg Turbine Wheel
-23033861,Sump Nut
-23033876,Picollo Tube ; Oil Delivery
-23034102,Picolo Tube
-23034145,4Th Stg Nozzle
-23034601,Nozzle Oil Pinion
-23034603,Gearbox Housing
-23034608,Sump Cover
-23034649,Air Tube
-23034760,Pt Support
-23034771,Tube
-23034775,Gp Support
-23034783,Ex Collector
-23035102,Oil Filter
-23035105,Oil Filter Housing
-23035136,Tie Bolt
-23035174,Nozzleassy Oilpinionbearing
-23035175,Containment Ring
-23035258,Nut
-23035262,"Bearing, Roller, Front Compressor"
-23035275,Tube Fitting Assy
-23035299,T/M Helical G/S
-23037403,Pt Inner Shaft
-23037413,Pt Outer Shaft
-23037419,"Cover Assy, Gearbox, Power & Accessory"
-23037444,Lab Seal
-23037446,Lab Seal
-23037447,Sump Cover
-23038100,Pt Support
-23038118,Gp Support
-23038136,Pt Outer Shaft
-23038219,Nozzle
-23038229,Gear
-23039065,C20 Impeller
-23039752,Front Support
-23039793,Body Assy
-23050888,Harness 
-23051075,Gearbox Cover
-23051106,Front Support
-23051119,Vane Diffuser
-23051122,Rear Support
-23051123,Compressor Mount
-23051137,Shroud Housing
-23052272,Oil Pump Body
-23052358,Race
-23052359,Front Compressor
-23052360,Oil Pump Body
-23053176,Bleed Valve 
-23053293,Tube
-23053299,1St Stg Wheel
-23053320,Sump Can
-23053781,#1 Comp Wheel
-23053974,Tiebolt
-23054163,Pickup Assy
-23054619,Gearbox Cover
-23054634,Turbine Support
-23055464,Gearbox Cover
-23055466,Gearbox Cover
-23055944,4Th Stg Wheel
-23056130,Combustion Liner
-23056644,Gearbox Housing 
-23057111,1St Stg Wheel
-23057112,2/3 Wheel
-23057114,4Th Stg Wheel
-23057115,5Th Wheel
-23057116,Stg 6 Wheel
-23057160,#3 Nozzle
-23057882,Blanket
-23058137,Brg Plate
-23058147,Impeller
-23059576,Gearbox Cover
-23059598,Scroll
-23060404,4Th Stg Wheel
-23060405,5Th Stg Wheel
-23060406,6Th Stg Wheel
-23060422,2/3 Stg Wheel
-23060432,2Nd/3Rd Wheel
-23060450,Nozzle
-23060451,Nozzle
-23060761,Cage Ring
-23060813,Spark Igniter Assy
-23060815,Lead Assy
-23060816,"Lead Assy, Igniter, Spark, Rh"
-23061011,Rear Carrier Only
-23061918,Rear Pto
-23061922,#4 Nozzle
-23063413,Spur Gearshaft
-23063415,Pinion Gear
-23064577,Scroll
-23064593,Rear Support
-23064603,Gearbox Housing
-23064606,Gearbox Cover
-23064612,Discharge Tube
-23064617,Front Pto
-23064640,Gearbox Housing 
-23065591,Impeller
-23065826,Picolo Tube
-23066652,Tube
-23066684,Tube Asssy
-23066731,Gp Support 
-23066744,#4 Turbine Wheel
-23068265,Tie Bolt
-23069705,Accumlator
-23069751,Rear Engine Mount
-23071309,Pt Inner Shaft
-23071313,Pt Inner Shaft
-23072099,2Nd Stg Splined Adapter
-23072258,14Th Stage Compressor Wheel
-23072862,Scroll
-23073353,Bleed Valve
-23073355,Servo Valve 
-23073520,Spur Gearshaft
-23073566,#1 Nozzle Shield
-23073668,Plate 
-23073853,1St Stg Wheel
-23073854,2Nd Turbine Wheel
-23075363,#3 Nozzle
-23076029,Oil Pump Cover
-23076082,Gearbox Housing 
-23076252,Pto Gearshaft
-23076529,2Nd Stg Splined Adapter
-23076531,Nut
-23076537,Impeller
-23079106,Ideler Gear
-23079638,Impeller
-23084247,Pinion Gear
-23084919,Rear Carrier (Only)
-23086689,Drain Fitting
-23087076,Prop Shaft
-23088595,Rear Carrier
-23088746,Prop Shaft & Rear Carrier Set
-23088757,Prop & Carrier Set
-23088766,Prop Shaft Flange
-23088840,Pt Support
-23089419,Rear Carrier (Only)
-23092769,Prop & Carrier Set
-23092770,Prop Shaft
-41004077,L/H Linkage Housing
-68898731,Pt Support
-01R3110282-04,Gg Case
-1-060-190-01,Compressor Front Brg Hsg
-1-150-240-06,Exhaust Diffuser
-204-011-731-001,Spacer
-204-040-387-005,Manifold
-204-040-603-007,Coupling
-204-040-603-009,Coupling 
-204-040-604-005,Coupling
-204-062-539-001,Nut
-204-063-006-001,Coupling
-205-040-125-005,Generator Offset Drive Quill
-205-061-521-001,Radius Block
-206-010-101-129,Main Rotor Yoke
-206-010-451-005,Ring Assy
-206-010-453-001,Swashplate Outer Ring
-206-010-453-009,Swashplate Outer Ring
-206-010-455-001,Swashplate Inner Cap
-206-011-724-109,Pitch Control Tubr Assy
-206-040-048-003,Input Pinion Adapter
-206-040-048-101,Input Pinion Adapter
-206-040-088-005,Valve Assy
-206-040-150-029,Trans Mission Case
-206-040-150-1-B,Transmission Lower Case
-206-040-203-003,Adapter
-206-040-221-003,Freewheeling Outershaft
-206-040-222-003,Freewheel Inner Shaft
-206-040-222-005,Freewheeling Inner
-206-040-236-017,Freewheeling Housing
-206-040-241-001,Aft Free Wheeling 
-206-040-241-1,Housing
-206-040-268-001,Freewheeling Cap
-206-040-379-101,Freewheeling Outer
-206-040-439-001,Output Shaft
-206-040-530-001,Transmission Main Case
-206-040-531-001,Gearshaft Case
-206-040-531-1,Gearshaft Case
-206-064-300-005,Exhaust Duct
-212-010-738-001,Trunnion
-212-010-775-001,Crosshead
-23001302-25,Orifice
-23001949,Bearing
-23003114,Fuel Pump
-23004513,"Seal, Plain, Encased, 0.625 Dia X 0.531 In"
-23004554,Bearing
-23005749,Ball Bearing
-23007151AL,"Bearing, Ball, (25 X 42 X 9 Mm) "
-23007247,26 Teeth Idler Gear
-23007248,"Gearshaft Assy, Fuel Control, Oil Pump "
-23008020,Turbine Tie-Bolt
-23008469,Bearing
-23009609,Bearing
-23009648,"Tube, Compressor Vent"
-23030911-G,Occ
-23030976,"Impeller Assy, Compr"
-23031838,Harness
-23032283-1,3-4 Beariing Cage
-23033729,"Coupling, Spline Adapter - Compres"
-23033862,Labyrinth Seal
-23033886,"Housing, Compressor Shroud"
-23034102R,Picolo Tube
-23034927,Thermocoupleassy Totgasproducer
-23035146,Firewall
-23039791-1,Coupling Adapter
-23053297,Bearing
-23057142,"Case Assy, Compressor (Disc)"
-23058128,"Sleeve, No. 8 Bearing"
-23059568-1,3-4 Bearing Cage
-23071895,T/M Gearshaft
-23072099TA,2Nd Stage Splined Adapter
-23076559-1,Coupling Adapter
-23079637-1,Coupling Adapter
-23087076-C,Rear Carrier
-23088595-C,Rear Carrier
-23088595-P,Prop Shaft
-23092511,"Wheel, Turbine, 3Rd Stage"
-23092770-P,Prop Shaft
-2392-2313-001,Crossbolt
-31-032-28,Tape
-31-033-1,Tape
-31-033-3,Tape
-3104720-01,Accessory Drive Spur Gearshaft
-350A32-3119-05,Lower Housing
-350A32-3121-01,Main Housing 
-350A32-3121-06,Main Housing 
-350A32312142,128 Mm Bushing
-350A33109201,Long Rotor Shaft
-350a33109201,Long Rotor Shaft
-350a37100205,Non Rotating Swashplate
-360A32116303,Servo Control Support
-360A321172MM3,Bushing
-365a31111504,Upper Link Scissor
-365A31111504,Upper Link Scissor
-365A31111604,Lower Link
-365A31117100,Scissor Drive Adapter
-365A32542721,Reduction Box Drive
-365A33354600,Tuning Weight
-3665A31111604,Lower Link
-4-141-140-18,Housing Assy #3
-4-301-236-01,Fuel Nozzle Assy
-406-040-056-111,Gearshaft Case
-406-040-506-101,Freewheeling Housing Assy
-410665730-00,Fuel Extender
-42D208,Switch
-6000-1,Temp Plate
-61350-24086-101,Input Bevel Gear
-6808392,Spanner Nut
-6810434,Spur Nut
-6824728,Bearing
-6826835,Gear Spur Idler
-6829641,"Nut, Spanner, Special Lock Flange"
-6843356AL-3,Pma Cage 
-6843360-1,Cage Bearing
-6843360p-1,Pma Cage
-6843361-2,Cage Bearing 
-6844422,Bearing Dampers
-6848194,Oil Tube
-6854701-43,Prop Brake Outer Member
-6859432,Ball Bearing
-6859433,Bearing
-6870811-P,Front Diffuser
-6871232,Oil Nozzle
-6871311,Oil Tube
-6871505,"Bearing, Ball, 40 X 62 X (15) 12 Mm, No. 5 Main"
-6874525,Bearing
-6874884/J,Rear Diffuser
-6875035,Bearing
-6875491,"Seal, Mating Ring, Rotating"
-6875520,Bearing
-6876685,Bracket
-6876872,"Seal, Labyrinth, Rotating, Rear Compr Brg"
-6876873,Impeller
-6877092,Turbine Wheel #2
-6877181,Gearbox Housing
-6877896,Oil Scavenger
-6889093,"Bearing, Ball, 30 X 55 X (16) 13 Mm, No. 2 Main"
-6889172-2,Cage Bearing 
-6889302-E,Gear
-6889337,Bearing
-6889702,"Gearshaft Assy, Helical"
-6890034AL,4Th Stg Diaphragm
-6890493,Bearing
-6891625,"Gearshaft Assy, Spur, Adapter Disc."
-6893008,"Slinger, Oil, Compressor Rear Bearing"
-6893031,"Seal, Compr Rotor Rear"
-6893672,Pinion Gear
-6896098,Na
-6898569,Gearbox Cover
-6898642,"Gearshaft, Spur Idler"
-6898677,Spacer 1.465Idx1.652Odx.298Wide
-6898920,3Rd Stage Shield
-76351-09150-103,Lower Tube Cap
-91-029,Tachometer
-AN924-10D,Nut
-AN924-20D,Nut
-AN924-24D,Nut
-AN941-10,Elbow
-AN960JD2616L,Washer
-AN960PD2616L,Washer
-AN960PD3016L,Washer
-AS3578-905,Packing
-C54856,Sliding Rod
-E23004208,"Diaphragm, #1 Nozzle"
-E23030974,Splined Adapter
-E23034608,Sump Cover
-E23038136,Pt Outer Shaft
-E23053330,#2 Nozzle
-E23055438,#2 Nozzle
-E23071313,Pt Inner Shaft
-E6890034,4Th Stg Diaphragm
-E6893672,Pinion Gear
-E6893673,Helical Gearshaft
-E6898784,2Nd Stage Splined Adapter
-EH23037413,Outer Shaft
-JRA1323,Lpc Rotating Rear
-M250-10001,Spur Gearshaft
-M250-10022,Adapter G/S
-M250-10026,Fc Gear
-M250-10038,Mount Assy
-M250-10044,Shroud Housing
-M250-10052,Front Support
-M250-10053,Rear Support
-M250-10055,Bolt Tie-Comprrotor
-M250-10073,Pinion Gear
-M250-10075,Tm Helical Gearshaaft
-M250-10107,Na
-M250-10117,"Bearing, Roller, No. 2-1/2, 29 X 42 X 9 Mm"
-M250-10150,Comb Assy Liner
-M250-10227,"Wheel, Turbine, 1St Stage"
-M250-10354,Bearing
-M250-10393,Roller Bearing
-M250-10415,"Coupling, Turbine To Compressor"
-M250-10416,Pt Outer Shaft
-M250-10658,"Wheel, Turbine, 2Nd Stage"
-M250-10911,Combustion Liner
-M83248-1-010,O-Ring
-M83248-1-113,O-Ring
-M83248-1-122,O-Ring
-M83248-1-230,O-Ring
-MISC SCRAP,Misc Scrap
-MS20470AD3-4,Rivets
-MS20470AD4-4,Rivets
-MS21919WDG27,Clamp
-MS24399D21,Reducer
-MS9047-065,Insert
-MS9486-49,Insert
-NAS617-12,Packing
-NAS617-16,Packing
-RR0000393,#3 Nozzle
-RR30000105,Oil Pump Body
-RR30000125,Gearshaft
-RR30000140,"Bearing, Ball, (40 X 68 X 15 Mm)"
-RR30000153,Spur Adapter Gearshaft
-RR30000231,"Case Assy, Outer Combustion"
-RR30000236,Turbine Wheel 3
-RR30000237,Turbine Wheel 2
-RR30000246,"Adapter, Splined, Turbine, 2Nd Stage"
-RR30000248,"Bearing, Ball, 42 X 62 X (15) 12 Mm, No. 5 Main"
-RR30000250,"Bearing, Roller, (29 X 42 X 9 Mm) No. 7 Main"
-RR30000254,Rotating Lab Seal
-RR30000342,"Tube Assy, Compressor Discharge - Rh"
-RR30000343,"Tube Assy, Compressor Discharge - Lh"
-RR30000372,"Coupling, Turbine To Compressor"
-RR30000416,Scroll
-RR30000423,Front Support
-RR30000429,"Shield Assy, Turbine Firewall - Vertical"
-RR30000434,Exhaust Collector
-RR30000437,"Shield Assy, Turbine Firewall - Horizontal"
-RR30000453,Combustion Liner
-RR30000481,Turbine Wheel 1
-RR30000494,Turbine Wheel 4
-RR30000546,"Bowl, Lube Oil Filter"
-RW41000515,Piston
Index: data_handler.py
===================================================================
diff --git a/data_handler.py b/data_handler.py
deleted file mode 100644
--- a/data_handler.py	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ /dev/null	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
@@ -1,33 +0,0 @@
-import os
-import pandas as pd
-
-
-def load_scrap_parts(file_path):
-    """
-    Loads the Scrap Parts Numbers and Descriptions CSV file into a DataFrame
-    and returns a dictionary for easy lookup.
-    """
-    scrap_parts_df = pd.read_csv(file_path)
-    scrap_parts_df = scrap_parts_df.rename(columns={'Unnamed: 0': 'Part Number', 'Unnamed: 1': 'Description'})
-    return scrap_parts_df.set_index('Part Number')['Description'].to_dict()
-
-
-def save_to_csv(csv_file_path, new_data):
-    """
-    Appends new data to the scrap_logbook.csv file.
-    """
-    df = pd.DataFrame([new_data])
-
-    if os.path.exists(csv_file_path):
-        df.to_csv(csv_file_path, mode='a', header=False, index=False)
-    else:
-        df.to_csv(csv_file_path, mode='w', header=True, index=False)
-
-
-def load_logbook_data(csv_file_path):
-    """
-    Loads the scrap logbook CSV data into a DataFrame.
-    """
-    if os.path.exists(csv_file_path):
-        return pd.read_csv(csv_file_path)
-    return pd.DataFrame()  # Return an empty DataFrame if the file doesn't exist
Index: db_version.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/db_version.py b/V2_Backup.py
rename from db_version.py
rename to V2_Backup.py
--- a/db_version.py	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ b/V2_Backup.py	(date 1725898553287)
@@ -130,14 +130,11 @@
         'remarks': 475
     }
 
-    # Define custom header names
-    custom_headers = ['Date', 'W/O', 'Part Number', 'Part Description', 'Serial Number', 'Initials', 'Remarks']
-
-    # Display the table headers with bold text using custom header names
-    for i, col in enumerate(custom_headers):
+    # Display the table headers with bold text
+    for i, col in enumerate(df.columns):
         header = tk.Label(table_frame, text=col, borderwidth=1, relief="solid", bg='lightblue', anchor='center', padx=5, pady=5, font=('Arial', 10, 'bold'))
         header.grid(row=0, column=i, sticky="nsew")
-        table_frame.grid_columnconfigure(i, minsize=column_widths.get(df.columns[i], 100))  # Set minimum column width based on data columns
+        table_frame.grid_columnconfigure(i, minsize=column_widths.get(col, 100))  # Set minimum column width
 
     # Load all data
     for i, row in df.iterrows():
@@ -150,6 +147,7 @@
     # Update status bar with the total number of records
     lbl_record_count.config(text=f"Total records: {total_records}")
 
+
 # Function to insert the current date
 def insert_current_date():
     current_date = datetime.now().strftime('%Y-%m-%d')
@@ -216,36 +214,69 @@
 entry_remarks = tk.Entry(center_frame, justify='center')
 entry_remarks.grid(row=6, column=1, padx=5, pady=5, sticky='ew')
 
-# Create and place the submit and clear buttons
-submit_button = tk.Button(form_frame, text="Submit", command=submit_data)
-submit_button.grid(row=1, column=0, padx=10, pady=10, sticky='w')
+# Create and place buttons
+btn_submit = tk.Button(center_frame, text="Submit", command=submit_data)
+btn_submit.grid(row=7, column=0, padx=5, pady=5, sticky='ew')
+
+btn_clear = tk.Button(center_frame, text="Clear", command=clear_form)
+btn_clear.grid(row=7, column=1, padx=5, pady=5, sticky='ew')
+
+# Configure the form_frame to center the center_frame
+form_frame.grid_columnconfigure(0, weight=1)
+form_frame.grid_rowconfigure(0, weight=1)
+
+# Create a scrollable frame for the table
+scroll_canvas = tk.Canvas(root)
+scrollbar = tk.Scrollbar(root, orient="vertical", command=scroll_canvas.yview)
+scroll_frame = tk.Frame(scroll_canvas)
+
+# Function to configure scrolling
+def on_frame_configure(event):
+    scroll_canvas.configure(scrollregion=scroll_canvas.bbox("all"))
 
-clear_button = tk.Button(form_frame, text="Clear Form", command=clear_form)
-clear_button.grid(row=1, column=0, padx=10, pady=10, sticky='e')
+scroll_frame.bind("<Configure>", on_frame_configure)
 
-# Create the table frame and grid it
-table_frame = tk.Frame(root)
-table_frame.grid(row=1, column=0, sticky="nsew")
+# Place the frame inside the canvas and configure scrolling
+scroll_canvas.create_window((0, 0), window=scroll_frame, anchor="nw")
+scroll_canvas.grid(row=1, column=0, sticky="nsew")
+scrollbar.grid(row=1, column=1, sticky="ns")
 
-# Create the status bar at the bottom of the window
-status_frame = tk.Frame(root, relief=tk.SUNKEN, borderwidth=1)
-status_frame.grid(row=2, column=0, sticky="nsew")
+scroll_canvas.config(yscrollcommand=scrollbar.set)
 
-lbl_record_count = tk.Label(status_frame, text="Total records: 0", anchor="w")
-lbl_record_count.pack(side=tk.LEFT, padx=10)
+# Add a frame for the table to the scrollable frame with padding
+outer_frame = tk.Frame(scroll_frame, padx=5, pady=5)
+outer_frame.pack(fill="both", expand=True, padx=5, pady=5)
 
-mailto_button = tk.Button(status_frame, text="Report an Issue", command=open_mailto)
-mailto_button.pack(side=tk.RIGHT, padx=10)
+table_frame = tk.Frame(outer_frame)
+table_frame.pack(fill="both", expand=True)
 
-# Record selection options
-record_selection = ttk.Combobox(status_frame, values=[50, 100, 200, 'ALL'], state='readonly', width=10)
-record_selection.current(0)
+# Create the status bar frame
+status_frame = tk.Frame(root, bd=1, relief="sunken")
+status_frame.grid(row=2, column=0, sticky="ew")
+
+# Add status bar widgets
+lbl_record_count = tk.Label(status_frame, text="Total records: 0", anchor='w', padx=5)
+lbl_record_count.pack(side="left", fill="x", expand=True)
+
+# Add record selection dropdown
+record_selection = ttk.Combobox(status_frame, values=[50, 100, 500, 1000, 'ALL'], state="readonly", width=10)
+record_selection.set(50)  # Set default to 50
+record_selection.pack(side="left", padx=10)
 record_selection.bind("<<ComboboxSelected>>", on_records_change)
-record_selection.pack(side=tk.RIGHT, padx=10)
 
-# Initialize the database and load the initial data
+lbl_email_link = tk.Label(status_frame, text="Contact Support", fg="blue", cursor="hand2", anchor='e', padx=5)
+lbl_email_link.pack(side="right", fill="x", expand=True)
+lbl_email_link.bind("<Button-1>", lambda e: open_mailto())
+
+# Initialize the database and load records
 initialize_db()
 load_data()
 
-# Start the Tkinter main loop
+# Configure row and column weights for resizing
+root.grid_rowconfigure(0, weight=1)  # Form frame row
+root.grid_rowconfigure(1, weight=3)  # Table row
+root.grid_rowconfigure(2, weight=0)  # Status bar row
+root.grid_columnconfigure(0, weight=1)  # Main column
+
+# Start the GUI event loop
 root.mainloop()
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"603c2501-99fc-4960-963a-5b2d6f29a5ec\" name=\"Changes\" comment=\"Switched from working wit ha CSV file into working with a db file as it is more reliable and faster to load.\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/db_version.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/db_version.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/db_version_Backup.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/db_version_Backup.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GimpyHand&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GimpyHand/Aerospace-Scrap-Logbook.git&quot;,\n    &quot;accountId&quot;: &quot;14b1df0d-ece0-40cd-956f-91c54fd64b85&quot;\n  }\n}</component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2lZ3tWJE3wtj5zJXnyMqORbchpy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Python.db_version.executor&quot;: &quot;Run&quot;,\n    &quot;Python.db_version_Backup.executor&quot;: &quot;Run&quot;,\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\n    &quot;Python.main_backup.executor&quot;: &quot;Run&quot;,\n    &quot;Python.test2.executor&quot;: &quot;Run&quot;,\n    &quot;Python.testing.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;com.codeium.enabled&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/alex.jessup/OneDrive - Cadorath Group/Documents/GitHub/Aerospace-Scrap-Logbook&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;aDefault&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"QodanaReportsService\">\n    <option name=\"descriptions\">\n      <ReportDescription localRun=\"true\" path=\"/tmp/qodana_output/qodana.sarif.json\" reportGuid=\"fcfccaa1-730a-4d33-9770-8a3b95dcdb77\" reportId=\"Aerospace Scrap Logbook/qodana/2024-09-04\" />\n    </option>\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\alex.jessup\\OneDrive - Cadorath Group\\Documents\\GitHub\\Aerospace-Scrap-Logbook\" />\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153\" />\n        <option value=\"bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"603c2501-99fc-4960-963a-5b2d6f29a5ec\" name=\"Changes\" comment=\"\" />\n      <created>1725373985706</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1725373985706</updated>\n      <workItem from=\"1725373987057\" duration=\"6304000\" />\n      <workItem from=\"1725386475189\" duration=\"2959000\" />\n      <workItem from=\"1725389848598\" duration=\"1458000\" />\n      <workItem from=\"1725449345640\" duration=\"12985000\" />\n      <workItem from=\"1725536284305\" duration=\"3500000\" />\n      <workItem from=\"1725542404407\" duration=\"853000\" />\n      <workItem from=\"1725543274111\" duration=\"16193000\" />\n      <workItem from=\"1725881745764\" duration=\"3174000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Initial versions of the Scrap Log for Aerospace\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725389614417</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725389614417</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Added colorization of required fields, requirement missing alert box, and testing of copying XLSM files in order to work of copies instead of orignals\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725477860207</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725477860207</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Switched from working wit ha CSV file into working with a db file as it is more reliable and faster to load.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725565192339</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725565192339</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Switched from working wit ha CSV file into working with a db file as it is more reliable and faster to load.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725565210185</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725565210185</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"5\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Initial versions of the Scrap Log for Aerospace\" />\n    <MESSAGE value=\"Added colorization of required fields, requirement missing alert box, and testing of copying XLSM files in order to work of copies instead of orignals\" />\n    <MESSAGE value=\"Switched from working wit ha CSV file into working with a db file as it is more reliable and faster to load.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Switched from working wit ha CSV file into working with a db file as it is more reliable and faster to load.\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/Aerospace_Scrap_Logbook$main_backup.coverage\" NAME=\"main_backup Coverage Results\" MODIFIED=\"1725555483066\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/Aerospace_Scrap_Logbook$test2.coverage\" NAME=\"test2 Coverage Results\" MODIFIED=\"1725476861999\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/Aerospace_Scrap_Logbook$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1725563854938\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/Aerospace_Scrap_Logbook$db_version.coverage\" NAME=\"db_version Coverage Results\" MODIFIED=\"1725890758654\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/Aerospace_Scrap_Logbook$db_version_Backup.coverage\" NAME=\"db_version_Backup Coverage Results\" MODIFIED=\"1725891763004\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/Aerospace_Scrap_Logbook$testing.coverage\" NAME=\"testing Coverage Results\" MODIFIED=\"1725561394558\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ b/.idea/workspace.xml	(date 1725969807037)
@@ -4,10 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="603c2501-99fc-4960-963a-5b2d6f29a5ec" name="Changes" comment="Switched from working wit ha CSV file into working with a db file as it is more reliable and faster to load.">
+    <list default="true" id="603c2501-99fc-4960-963a-5b2d6f29a5ec" name="Changes" comment="Added new PyQt5 version to provide more efficient data loading and update aesthetics for the GUI">
+      <change afterPath="$PROJECT_DIR$/V3_Backup.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/db_version.py" beforeDir="false" afterPath="$PROJECT_DIR$/db_version.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/db_version_Backup.py" beforeDir="false" afterPath="$PROJECT_DIR$/db_version_Backup.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Scrap Parts Numbers + Descriptions.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/data_handler.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/db_version.py" beforeDir="false" afterPath="$PROJECT_DIR$/V2_Backup.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/db_version_Backup.py" beforeDir="false" afterPath="$PROJECT_DIR$/V2.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/file_handler.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/gui_handler.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/V1.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main_backup.py" beforeDir="false" afterPath="$PROJECT_DIR$/V1_Backup.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pyqt_db_version.py" beforeDir="false" afterPath="$PROJECT_DIR$/V3.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/testing.py" beforeDir="false" afterPath="$PROJECT_DIR$/testing.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/utilities.py" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -30,12 +40,12 @@
     &quot;assignee&quot;: &quot;GimpyHand&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings">{
-  &quot;selectedUrlAndAccountId&quot;: {
-    &quot;url&quot;: &quot;https://github.com/GimpyHand/Aerospace-Scrap-Logbook.git&quot;,
-    &quot;accountId&quot;: &quot;14b1df0d-ece0-40cd-956f-91c54fd64b85&quot;
-  }
-}</component>
+  <component name="GithubPullRequestsUISettings"><![CDATA[{
+  "selectedUrlAndAccountId": {
+    "url": "https://github.com/GimpyHand/Aerospace-Scrap-Logbook.git",
+    "accountId": "605940db-0f03-48f0-a3bd-50fc84946a5d"
+  }
+}]]></component>
   <component name="ProblemsViewState">
     <option name="selectedTabId" value="ProjectErrors" />
   </component>
@@ -50,29 +60,35 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Python.db_version.executor&quot;: &quot;Run&quot;,
-    &quot;Python.db_version_Backup.executor&quot;: &quot;Run&quot;,
-    &quot;Python.main.executor&quot;: &quot;Run&quot;,
-    &quot;Python.main_backup.executor&quot;: &quot;Run&quot;,
-    &quot;Python.test2.executor&quot;: &quot;Run&quot;,
-    &quot;Python.testing.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;com.codeium.enabled&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/alex.jessup/OneDrive - Cadorath Group/Documents/GitHub/Aerospace-Scrap-Logbook&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;run.code.analysis.last.selected.profile&quot;: &quot;aDefault&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Python.db_version.executor": "Run",
+    "Python.db_version_Backup.executor": "Run",
+    "Python.main.executor": "Run",
+    "Python.main_backup.executor": "Run",
+    "Python.pyqt_db_version.executor": "Run",
+    "Python.test2.executor": "Run",
+    "Python.testing.executor": "Run",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "com.codeium.enabled": "true",
+    "git-widget-placeholder": "master",
+    "last_opened_file_path": "/home/alex.jessup/Documents/GitHub/Aerospace Scrap Logbook",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "run.code.analysis.last.selected.profile": "aDefault",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
+    "vue.rearranger.settings.migration": "true"
+  },
+  "keyToStringList": {
+    "DatabaseDriversLRU": [
+      "mysql"
+    ]
   }
-}</component>
+}]]></component>
   <component name="QodanaReportsService">
     <option name="descriptions">
       <ReportDescription localRun="true" path="/tmp/qodana_output/qodana.sarif.json" reportGuid="fcfccaa1-730a-4d33-9770-8a3b95dcdb77" reportId="Aerospace Scrap Logbook/qodana/2024-09-04" />
@@ -80,8 +96,8 @@
   </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
-      <recent name="C:\Users\alex.jessup\OneDrive - Cadorath Group\Documents\GitHub\Aerospace-Scrap-Logbook" />
       <recent name="$PROJECT_DIR$" />
+      <recent name="C:\Users\alex.jessup\OneDrive - Cadorath Group\Documents\GitHub\Aerospace-Scrap-Logbook" />
     </key>
   </component>
   <component name="SharedIndexes">
@@ -108,6 +124,7 @@
       <workItem from="1725542404407" duration="853000" />
       <workItem from="1725543274111" duration="16193000" />
       <workItem from="1725881745764" duration="3174000" />
+      <workItem from="1725968278851" duration="1528000" />
     </task>
     <task id="LOCAL-00001" summary="Initial versions of the Scrap Log for Aerospace">
       <option name="closed" value="true" />
@@ -141,7 +158,23 @@
       <option name="project" value="LOCAL" />
       <updated>1725565210185</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="Added new PyQt5 version to provide more efficient data loading and update aesthetics for the GUI">
+      <option name="closed" value="true" />
+      <created>1725968549526</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1725968549526</updated>
+    </task>
+    <task id="LOCAL-00006" summary="Added new PyQt5 version to provide more efficient data loading and update aesthetics for the GUI">
+      <option name="closed" value="true" />
+      <created>1725968554239</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1725968554239</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -162,14 +195,16 @@
     <MESSAGE value="Initial versions of the Scrap Log for Aerospace" />
     <MESSAGE value="Added colorization of required fields, requirement missing alert box, and testing of copying XLSM files in order to work of copies instead of orignals" />
     <MESSAGE value="Switched from working wit ha CSV file into working with a db file as it is more reliable and faster to load." />
-    <option name="LAST_COMMIT_MESSAGE" value="Switched from working wit ha CSV file into working with a db file as it is more reliable and faster to load." />
+    <MESSAGE value="Added new PyQt5 version to provide more efficient data loading and update aesthetics for the GUI" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added new PyQt5 version to provide more efficient data loading and update aesthetics for the GUI" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$main_backup.coverage" NAME="main_backup Coverage Results" MODIFIED="1725555483066" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$test2.coverage" NAME="test2 Coverage Results" MODIFIED="1725476861999" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$main.coverage" NAME="main Coverage Results" MODIFIED="1725563854938" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$testing.coverage" NAME="testing Coverage Results" MODIFIED="1725561394558" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$main.coverage" NAME="main Coverage Results" MODIFIED="1725969114752" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$db_version.coverage" NAME="db_version Coverage Results" MODIFIED="1725890758654" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$db_version_Backup.coverage" NAME="db_version_Backup Coverage Results" MODIFIED="1725891763004" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$testing.coverage" NAME="testing Coverage Results" MODIFIED="1725561394558" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$test2.coverage" NAME="test2 Coverage Results" MODIFIED="1725476861999" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$pyqt_db_version.coverage" NAME="pyqt_db_version Coverage Results" MODIFIED="1725968707296" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/Aerospace_Scrap_Logbook$main_backup.coverage" NAME="main_backup Coverage Results" MODIFIED="1725555483066" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
 </project>
\ No newline at end of file
Index: testing.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\nfrom tkinter import messagebox\nimport pandas as pd\nfrom datetime import datetime\nimport os\nimport webbrowser\nimport shutil\nimport matplotlib.pyplot as plt\nfrom matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n\n# Specify the source and copy destination directories for the Engine Shop Excel Files\nsource_dir = r'X:\\ENGINE SERVICES\\02 Work Orders'\ndestination_dir = r'X:\\ENGINE SERVICES\\Scrap Log Files'\n\n# Create the destination directory if it doesn't exist\nos.makedirs(destination_dir, exist_ok=True)\n'''\n# Loop through all files in the source directory recursively\nfor dirpath, dirnames, filenames in os.walk(source_dir):\n    for file_name in filenames:\n        # Check if the file is an xlsm file\n        if file_name.endswith('.xlsm'):\n            # Check if the file name contains \"(AutoRecovered)\"\n            if \"(AutoRecovered)\" not in file_name:\n                # Construct the full file path\n                source_file_path = os.path.join(dirpath, file_name)\n                # Get the size of the file in bytes\n                file_size = os.path.getsize(source_file_path)\n                # Check if the file size is greater than 1KB\n                if file_size > 1024:\n                    # Get the directory name from the source path\n                    dir_name = os.path.basename(dirpath)\n                    # Construct the destination file path with the directory name\n                    destination_file_path = os.path.join(destination_dir, f\"{dir_name}_{file_name}\")\n                    try:\n                        # Copy the file to the destination directory\n                        shutil.copy2(source_file_path, destination_file_path)\n                        print(f\"Copied: {destination_file_path}\")\n                    except Exception as e:\n                        print(f\"Failed to copy {source_file_path} to {destination_file_path}: {e}\")\n'''\n# Get the path to the current directory\ncurrent_dir = os.path.dirname(__file__)\n\n# Load the scrap parts numbers + descriptions file\nscrap_parts_file = os.path.join(current_dir, 'Scrap Parts Numbers + Descriptions.csv')\nscrap_parts_df = pd.read_csv(scrap_parts_file)\n\n# Rename the columns to 'Part Number' and 'Description'\nscrap_parts_df = scrap_parts_df.rename(columns={'Unnamed: 0': 'Part Number', 'Unnamed: 1': 'Description'})\n\n# Create a dictionary for easy lookup\n# part_lookup = scrap_parts_df.set_index('Part Number')['Description'].to_dict()\n\n# Path to the new scrap CSV file\ncsv_file_path = r'X:\\AEROSPACE\\Aerospace YWG Scrap Parts Logbook\\scrap_logbook.csv'\n\n# Function to submit data to the CSV file\ndef submit_data():\n    # Get values from the form\n    date = entry_date.get().strip()\n    initials = entry_initials.get().strip()\n\n    # Check if required fields are filled out\n    if not date or not initials:\n        missing_fields = []\n        if not date:\n            missing_fields.append(\"Date\")\n        if not initials:\n            missing_fields.append(\"Initials\")\n\n        # Show error message box indicating which fields are missing\n        messagebox.showerror(\"Missing Information\", f\"Please fill out the following required field(s): {', '.join(missing_fields)}\")\n        return\n\n    # Validate the date format\n    try:\n        datetime.strptime(date, '%Y-%m-%d')\n    except ValueError:\n        messagebox.showerror(\"Invalid Date\", \"Please enter the date in YYYY-MM-DD format.\")\n        return\n\n    # If both required fields are filled and valid, proceed with submission\n    wo = entry_wo.get().strip()\n    part_number = entry_part_number.get().strip()\n    part_description = entry_part_description.get().strip()\n    serial_number = entry_serial_number.get().strip()\n    remarks = entry_remarks.get().strip()\n\n    # Append the data to the CSV file\n    new_data = {\n        \"Date\": date,\n        \"W/O\": wo,\n        \"Part Number\": part_number,\n        \"Part Description\": part_description,\n        \"Serial Number\": serial_number,\n        \"Initials\": initials,\n        \"Remarks\": remarks\n    }\n    df = pd.DataFrame([new_data])\n\n    if os.path.exists(csv_file_path):\n        df.to_csv(csv_file_path, mode='a', header=False, index=False)\n    else:\n        df.to_csv(csv_file_path, mode='w', header=True, index=False)\n\n    # Refresh the displayed data\n    load_data()\n\n    # Clear the form after submission without prompt\n    entry_date.delete(0, tk.END)\n    entry_wo.delete(0, tk.END)\n    entry_part_number.delete(0, tk.END)\n    entry_part_description.delete(0, tk.END)\n    entry_serial_number.delete(0, tk.END)\n    entry_initials.delete(0, tk.END)\n    entry_remarks.delete(0, tk.END)\n\n# Function to clear the form with confirmation\ndef clear_form():\n    if messagebox.askyesno(\"Clear Form\", \"Are you sure you want to clear the form?\"):\n        entry_date.delete(0, tk.END)\n        entry_wo.delete(0, tk.END)\n        entry_part_number.delete(0, tk.END)\n        entry_part_description.delete(0, tk.END)\n        entry_serial_number.delete(0, tk.END)\n        entry_initials.delete(0, tk.END)\n        entry_remarks.delete(0, tk.END)\n\n# Function to load and display the last 20 records from the CSV file\ndef load_data():\n    if os.path.exists(csv_file_path):\n        df = pd.read_csv(csv_file_path)\n\n        # Clear the current table display\n        for widget in table_frame.winfo_children():\n            widget.destroy()\n\n        # Define column widths (modify these values as needed)\n        column_widths = {\n            'Date': 120,\n            'W/O': 80,\n            'Part Number': 150,\n            'Part Description': 300,\n            'Serial Number': 120,\n            'Initials': 80,\n            'Remarks': 475\n        }\n\n        # Display the table headers with bold text\n        for i, col in enumerate(df.columns):\n            header = tk.Label(table_frame, text=col, borderwidth=1, relief=\"solid\", bg='lightblue', anchor='center', padx=5, pady=5, font=('Arial', 10, 'bold'))\n            header.grid(row=0, column=i, sticky=\"nsew\")\n            table_frame.grid_columnconfigure(i, minsize=column_widths.get(col, 100))  # Set minimum column width\n\n        # Display the table data\n        for i, row in df.iterrows():\n            for j, value in enumerate(row):\n                color = 'white' if i % 2 == 0 else 'lightgrey'\n                cell = tk.Label(table_frame, text=value, borderwidth=1, relief=\"solid\", bg=color, anchor='center', padx=5, pady=5, wraplength=column_widths[df.columns[j]])\n                cell.grid(row=i + 1, column=j, sticky=\"nsew\")\n\n        # Adjust row and column weights to make sure the table expands\n        for i in range(len(df.columns)):\n            table_frame.grid_columnconfigure(i, weight=1)\n        table_frame.grid_rowconfigure(0, weight=1)\n\n        # Update status bar with the number of records\n        num_records = len(df)\n        lbl_record_count.config(text=f\"# of records: {num_records}\")\n\n        # Update the line chart\n        update_line_chart(df)\n\n# Function to update the line chart\ndef update_line_chart(df):\n    df['Date'] = pd.to_datetime(df['Date'])\n    df['Month'] = df['Date'].dt.to_period('M')\n    monthly_counts = df.groupby('Month').size()\n\n    fig, ax = plt.subplots(figsize=(6, 3))  # Adjust the figsize to fit within the specified area\n    monthly_counts.plot(kind='line', ax=ax)\n    ax.set_title('Number of Records by Month')\n    ax.set_xlabel('Month')\n    ax.set_ylabel('Number of Records')\n\n    # Clear the previous chart\n    for widget in chart_frame.winfo_children():\n        widget.destroy()\n\n    # Embed the new chart\n    canvas = FigureCanvasTkAgg(fig, master=chart_frame)\n    canvas.draw()\n    canvas.get_tk_widget().grid(row=0, column=0, sticky=\"nsew\")\n\n# Function to insert the current date\ndef insert_current_date():\n    current_date = datetime.now().strftime('%Y-%m-%d')\n    entry_date.delete(0, tk.END)\n    entry_date.insert(0, current_date)\n\n# Function to open the mailto link\ndef open_mailto():\n    webbrowser.open('mailto:alex.jessup@cadorath.com?subject=Scrap%20Log%20Issue')\n\n# Setup the GUI window\nroot = tk.Tk()\nroot.title(\"Cadorath Aerospace Scrap Logbook\")\nroot.geometry('1360x768') # Set the initial window size\nroot.minsize(1360, 768)  # Set minimum window size to the initial size\nroot.maxsize(1360, 768)  # Set maximum window size to the initial size\n\n# Create a frame for the form and buttons\nform_frame = tk.Frame(root)\nform_frame.grid(row=0, column=0, sticky=\"nsew\")\n\n# Create and place form labels and entries with centered text\ntk.Label(form_frame, text=\"*Date (YYYY-MM-DD):\", fg=\"red\").grid(row=0, column=0, padx=5, pady=5, sticky='e')\nentry_date = tk.Entry(form_frame, justify='center')\nentry_date.grid(row=0, column=1, padx=5, pady=5, sticky='ew')\n\n# Create and place the date button\nbtn_date = tk.Button(form_frame, text=\"\uD83D\uDCC5\", command=insert_current_date)\nbtn_date.grid(row=0, column=2, padx=5, pady=5, sticky='w')\n\ntk.Label(form_frame, text=\"W/O:\").grid(row=1, column=0, padx=5, pady=5, sticky='e')\nentry_wo = tk.Entry(form_frame, justify='center')\nentry_wo.grid(row=1, column=1, padx=5, pady=5, sticky='ew')\n\ntk.Label(form_frame, text=\"Part Number:\").grid(row=2, column=0, padx=5, pady=5, sticky='e')\nentry_part_number = tk.Entry(form_frame, justify='center')\nentry_part_number.grid(row=2, column=1, padx=5, pady=5, sticky='ew')\n\ntk.Label(form_frame, text=\"Part Description:\").grid(row=3, column=0, padx=5, pady=5, sticky='e')\nentry_part_description = tk.Entry(form_frame, justify='center')\nentry_part_description.grid(row=3, column=1, padx=5, pady=5, sticky='ew')\n\ntk.Label(form_frame, text=\"Serial Number:\").grid(row=4, column=0, padx=5, pady=5, sticky='e')\nentry_serial_number = tk.Entry(form_frame, justify='center')\nentry_serial_number.grid(row=4, column=1, padx=5, pady=5, sticky='ew')\n\ntk.Label(form_frame, text=\"*Initials:\", fg=\"red\").grid(row=5, column=0, padx=5, pady=5, sticky='e')\nentry_initials = tk.Entry(form_frame, justify='center')\nentry_initials.grid(row=5, column=1, padx=5, pady=5, sticky='ew')\n\ntk.Label(form_frame, text=\"Remarks:\").grid(row=6, column=0, padx=5, pady=5, sticky='e')\nentry_remarks = tk.Entry(form_frame, justify='center')\nentry_remarks.grid(row=6, column=1, padx=5, pady=5, sticky='ew')\n\n# Create and place buttons\nbtn_submit = tk.Button(form_frame, text=\"Submit\", command=submit_data)\nbtn_submit.grid(row=7, column=0, padx=5, pady=5, sticky='ew')\n\nbtn_clear = tk.Button(form_frame, text=\"Clear\", command=clear_form)\nbtn_clear.grid(row=7, column=1, padx=5, pady=5, sticky='ew')\n\n# Create a frame for the chart\nchart_frame = tk.Frame(root, width=600, height=325)  # Set the size and background color for visualization\nchart_frame.grid(row=0, column=1, rowspan=5, sticky=\"nsew\")  # Adjust the grid location\n\n# Create a scrollable frame for the table\nscroll_canvas = tk.Canvas(root)\nscrollbar = tk.Scrollbar(root, orient=\"vertical\", command=scroll_canvas.yview)\nscroll_frame = tk.Frame(scroll_canvas)\n\n# Function to configure scrolling\ndef on_frame_configure(event):\n    scroll_canvas.configure(scrollregion=scroll_canvas.bbox(\"all\"))\n\nscroll_frame.bind(\"<Configure>\", on_frame_configure)\n\n# Place the frame inside the canvas and configure scrolling\nscroll_canvas.create_window((0, 0), window=scroll_frame, anchor=\"nw\")\nscroll_canvas.grid(row=1, column=0, columnspan=3, sticky=\"nsew\")  # Adjust the grid location\nscrollbar.grid(row=1, column=3, sticky=\"ns\")\n\nscroll_canvas.config(yscrollcommand=scrollbar.set)\n\n# Add a frame for the table to the scrollable frame with padding\nouter_frame = tk.Frame(scroll_frame, padx=5, pady=5)\nouter_frame.pack(fill=\"both\", expand=True, padx=5, pady=5)\n\ntable_frame = tk.Frame(outer_frame)\ntable_frame.pack(fill=\"both\", expand=True)\n\n# Create the status bar frame\nstatus_frame = tk.Frame(root, bd=1, relief=\"sunken\")\nstatus_frame.grid(row=2, column=0, columnspan=4, sticky=\"ew\")  # Adjust the grid location\n\n# Add status bar widgets\nlbl_record_count = tk.Label(status_frame, text=\"# of records: 0\", anchor='w', padx=5)\nlbl_record_count.pack(side=\"left\", fill=\"x\", expand=True)\n\nlbl_email_link = tk.Label(status_frame, text=\"Contact Support\", fg=\"blue\", cursor=\"hand2\", anchor='e', padx=5)\nlbl_email_link.pack(side=\"right\", fill=\"x\", expand=True)\nlbl_email_link.bind(\"<Button-1>\", lambda e: open_mailto())\n\n# Load and display the records\nload_data()\n\n# Configure row and column weights for resizing\nroot.grid_rowconfigure(0, weight=1)  # Form frame row\nroot.grid_rowconfigure(1, weight=3)  # Table row\nroot.grid_rowconfigure(2, weight=0)  # Status bar row\n\nroot.grid_columnconfigure(0, weight=1)  # Main column\nroot.grid_columnconfigure(1, weight=1)  # Main column\nroot.grid_columnconfigure(2, weight=1)  # Main column\nroot.grid_columnconfigure(3, weight=1)  # Chart column\n\n# Start the GUI event loop\nroot.mainloop()\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testing.py b/testing.py
--- a/testing.py	(revision 90d21bbb65a063c947eb99df64b93769392c371c)
+++ b/testing.py	(date 1725969039776)
@@ -1,312 +1,0 @@
-import tkinter as tk
-from tkinter import messagebox
-import pandas as pd
-from datetime import datetime
-import os
-import webbrowser
-import shutil
-import matplotlib.pyplot as plt
-from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
-
-# Specify the source and copy destination directories for the Engine Shop Excel Files
-source_dir = r'X:\ENGINE SERVICES\02 Work Orders'
-destination_dir = r'X:\ENGINE SERVICES\Scrap Log Files'
-
-# Create the destination directory if it doesn't exist
-os.makedirs(destination_dir, exist_ok=True)
-'''
-# Loop through all files in the source directory recursively
-for dirpath, dirnames, filenames in os.walk(source_dir):
-    for file_name in filenames:
-        # Check if the file is an xlsm file
-        if file_name.endswith('.xlsm'):
-            # Check if the file name contains "(AutoRecovered)"
-            if "(AutoRecovered)" not in file_name:
-                # Construct the full file path
-                source_file_path = os.path.join(dirpath, file_name)
-                # Get the size of the file in bytes
-                file_size = os.path.getsize(source_file_path)
-                # Check if the file size is greater than 1KB
-                if file_size > 1024:
-                    # Get the directory name from the source path
-                    dir_name = os.path.basename(dirpath)
-                    # Construct the destination file path with the directory name
-                    destination_file_path = os.path.join(destination_dir, f"{dir_name}_{file_name}")
-                    try:
-                        # Copy the file to the destination directory
-                        shutil.copy2(source_file_path, destination_file_path)
-                        print(f"Copied: {destination_file_path}")
-                    except Exception as e:
-                        print(f"Failed to copy {source_file_path} to {destination_file_path}: {e}")
-'''
-# Get the path to the current directory
-current_dir = os.path.dirname(__file__)
-
-# Load the scrap parts numbers + descriptions file
-scrap_parts_file = os.path.join(current_dir, 'Scrap Parts Numbers + Descriptions.csv')
-scrap_parts_df = pd.read_csv(scrap_parts_file)
-
-# Rename the columns to 'Part Number' and 'Description'
-scrap_parts_df = scrap_parts_df.rename(columns={'Unnamed: 0': 'Part Number', 'Unnamed: 1': 'Description'})
-
-# Create a dictionary for easy lookup
-# part_lookup = scrap_parts_df.set_index('Part Number')['Description'].to_dict()
-
-# Path to the new scrap CSV file
-csv_file_path = r'X:\AEROSPACE\Aerospace YWG Scrap Parts Logbook\scrap_logbook.csv'
-
-# Function to submit data to the CSV file
-def submit_data():
-    # Get values from the form
-    date = entry_date.get().strip()
-    initials = entry_initials.get().strip()
-
-    # Check if required fields are filled out
-    if not date or not initials:
-        missing_fields = []
-        if not date:
-            missing_fields.append("Date")
-        if not initials:
-            missing_fields.append("Initials")
-
-        # Show error message box indicating which fields are missing
-        messagebox.showerror("Missing Information", f"Please fill out the following required field(s): {', '.join(missing_fields)}")
-        return
-
-    # Validate the date format
-    try:
-        datetime.strptime(date, '%Y-%m-%d')
-    except ValueError:
-        messagebox.showerror("Invalid Date", "Please enter the date in YYYY-MM-DD format.")
-        return
-
-    # If both required fields are filled and valid, proceed with submission
-    wo = entry_wo.get().strip()
-    part_number = entry_part_number.get().strip()
-    part_description = entry_part_description.get().strip()
-    serial_number = entry_serial_number.get().strip()
-    remarks = entry_remarks.get().strip()
-
-    # Append the data to the CSV file
-    new_data = {
-        "Date": date,
-        "W/O": wo,
-        "Part Number": part_number,
-        "Part Description": part_description,
-        "Serial Number": serial_number,
-        "Initials": initials,
-        "Remarks": remarks
-    }
-    df = pd.DataFrame([new_data])
-
-    if os.path.exists(csv_file_path):
-        df.to_csv(csv_file_path, mode='a', header=False, index=False)
-    else:
-        df.to_csv(csv_file_path, mode='w', header=True, index=False)
-
-    # Refresh the displayed data
-    load_data()
-
-    # Clear the form after submission without prompt
-    entry_date.delete(0, tk.END)
-    entry_wo.delete(0, tk.END)
-    entry_part_number.delete(0, tk.END)
-    entry_part_description.delete(0, tk.END)
-    entry_serial_number.delete(0, tk.END)
-    entry_initials.delete(0, tk.END)
-    entry_remarks.delete(0, tk.END)
-
-# Function to clear the form with confirmation
-def clear_form():
-    if messagebox.askyesno("Clear Form", "Are you sure you want to clear the form?"):
-        entry_date.delete(0, tk.END)
-        entry_wo.delete(0, tk.END)
-        entry_part_number.delete(0, tk.END)
-        entry_part_description.delete(0, tk.END)
-        entry_serial_number.delete(0, tk.END)
-        entry_initials.delete(0, tk.END)
-        entry_remarks.delete(0, tk.END)
-
-# Function to load and display the last 20 records from the CSV file
-def load_data():
-    if os.path.exists(csv_file_path):
-        df = pd.read_csv(csv_file_path)
-
-        # Clear the current table display
-        for widget in table_frame.winfo_children():
-            widget.destroy()
-
-        # Define column widths (modify these values as needed)
-        column_widths = {
-            'Date': 120,
-            'W/O': 80,
-            'Part Number': 150,
-            'Part Description': 300,
-            'Serial Number': 120,
-            'Initials': 80,
-            'Remarks': 475
-        }
-
-        # Display the table headers with bold text
-        for i, col in enumerate(df.columns):
-            header = tk.Label(table_frame, text=col, borderwidth=1, relief="solid", bg='lightblue', anchor='center', padx=5, pady=5, font=('Arial', 10, 'bold'))
-            header.grid(row=0, column=i, sticky="nsew")
-            table_frame.grid_columnconfigure(i, minsize=column_widths.get(col, 100))  # Set minimum column width
-
-        # Display the table data
-        for i, row in df.iterrows():
-            for j, value in enumerate(row):
-                color = 'white' if i % 2 == 0 else 'lightgrey'
-                cell = tk.Label(table_frame, text=value, borderwidth=1, relief="solid", bg=color, anchor='center', padx=5, pady=5, wraplength=column_widths[df.columns[j]])
-                cell.grid(row=i + 1, column=j, sticky="nsew")
-
-        # Adjust row and column weights to make sure the table expands
-        for i in range(len(df.columns)):
-            table_frame.grid_columnconfigure(i, weight=1)
-        table_frame.grid_rowconfigure(0, weight=1)
-
-        # Update status bar with the number of records
-        num_records = len(df)
-        lbl_record_count.config(text=f"# of records: {num_records}")
-
-        # Update the line chart
-        update_line_chart(df)
-
-# Function to update the line chart
-def update_line_chart(df):
-    df['Date'] = pd.to_datetime(df['Date'])
-    df['Month'] = df['Date'].dt.to_period('M')
-    monthly_counts = df.groupby('Month').size()
-
-    fig, ax = plt.subplots(figsize=(6, 3))  # Adjust the figsize to fit within the specified area
-    monthly_counts.plot(kind='line', ax=ax)
-    ax.set_title('Number of Records by Month')
-    ax.set_xlabel('Month')
-    ax.set_ylabel('Number of Records')
-
-    # Clear the previous chart
-    for widget in chart_frame.winfo_children():
-        widget.destroy()
-
-    # Embed the new chart
-    canvas = FigureCanvasTkAgg(fig, master=chart_frame)
-    canvas.draw()
-    canvas.get_tk_widget().grid(row=0, column=0, sticky="nsew")
-
-# Function to insert the current date
-def insert_current_date():
-    current_date = datetime.now().strftime('%Y-%m-%d')
-    entry_date.delete(0, tk.END)
-    entry_date.insert(0, current_date)
-
-# Function to open the mailto link
-def open_mailto():
-    webbrowser.open('mailto:alex.jessup@cadorath.com?subject=Scrap%20Log%20Issue')
-
-# Setup the GUI window
-root = tk.Tk()
-root.title("Cadorath Aerospace Scrap Logbook")
-root.geometry('1360x768') # Set the initial window size
-root.minsize(1360, 768)  # Set minimum window size to the initial size
-root.maxsize(1360, 768)  # Set maximum window size to the initial size
-
-# Create a frame for the form and buttons
-form_frame = tk.Frame(root)
-form_frame.grid(row=0, column=0, sticky="nsew")
-
-# Create and place form labels and entries with centered text
-tk.Label(form_frame, text="*Date (YYYY-MM-DD):", fg="red").grid(row=0, column=0, padx=5, pady=5, sticky='e')
-entry_date = tk.Entry(form_frame, justify='center')
-entry_date.grid(row=0, column=1, padx=5, pady=5, sticky='ew')
-
-# Create and place the date button
-btn_date = tk.Button(form_frame, text="ðŸ“…", command=insert_current_date)
-btn_date.grid(row=0, column=2, padx=5, pady=5, sticky='w')
-
-tk.Label(form_frame, text="W/O:").grid(row=1, column=0, padx=5, pady=5, sticky='e')
-entry_wo = tk.Entry(form_frame, justify='center')
-entry_wo.grid(row=1, column=1, padx=5, pady=5, sticky='ew')
-
-tk.Label(form_frame, text="Part Number:").grid(row=2, column=0, padx=5, pady=5, sticky='e')
-entry_part_number = tk.Entry(form_frame, justify='center')
-entry_part_number.grid(row=2, column=1, padx=5, pady=5, sticky='ew')
-
-tk.Label(form_frame, text="Part Description:").grid(row=3, column=0, padx=5, pady=5, sticky='e')
-entry_part_description = tk.Entry(form_frame, justify='center')
-entry_part_description.grid(row=3, column=1, padx=5, pady=5, sticky='ew')
-
-tk.Label(form_frame, text="Serial Number:").grid(row=4, column=0, padx=5, pady=5, sticky='e')
-entry_serial_number = tk.Entry(form_frame, justify='center')
-entry_serial_number.grid(row=4, column=1, padx=5, pady=5, sticky='ew')
-
-tk.Label(form_frame, text="*Initials:", fg="red").grid(row=5, column=0, padx=5, pady=5, sticky='e')
-entry_initials = tk.Entry(form_frame, justify='center')
-entry_initials.grid(row=5, column=1, padx=5, pady=5, sticky='ew')
-
-tk.Label(form_frame, text="Remarks:").grid(row=6, column=0, padx=5, pady=5, sticky='e')
-entry_remarks = tk.Entry(form_frame, justify='center')
-entry_remarks.grid(row=6, column=1, padx=5, pady=5, sticky='ew')
-
-# Create and place buttons
-btn_submit = tk.Button(form_frame, text="Submit", command=submit_data)
-btn_submit.grid(row=7, column=0, padx=5, pady=5, sticky='ew')
-
-btn_clear = tk.Button(form_frame, text="Clear", command=clear_form)
-btn_clear.grid(row=7, column=1, padx=5, pady=5, sticky='ew')
-
-# Create a frame for the chart
-chart_frame = tk.Frame(root, width=600, height=325)  # Set the size and background color for visualization
-chart_frame.grid(row=0, column=1, rowspan=5, sticky="nsew")  # Adjust the grid location
-
-# Create a scrollable frame for the table
-scroll_canvas = tk.Canvas(root)
-scrollbar = tk.Scrollbar(root, orient="vertical", command=scroll_canvas.yview)
-scroll_frame = tk.Frame(scroll_canvas)
-
-# Function to configure scrolling
-def on_frame_configure(event):
-    scroll_canvas.configure(scrollregion=scroll_canvas.bbox("all"))
-
-scroll_frame.bind("<Configure>", on_frame_configure)
-
-# Place the frame inside the canvas and configure scrolling
-scroll_canvas.create_window((0, 0), window=scroll_frame, anchor="nw")
-scroll_canvas.grid(row=1, column=0, columnspan=3, sticky="nsew")  # Adjust the grid location
-scrollbar.grid(row=1, column=3, sticky="ns")
-
-scroll_canvas.config(yscrollcommand=scrollbar.set)
-
-# Add a frame for the table to the scrollable frame with padding
-outer_frame = tk.Frame(scroll_frame, padx=5, pady=5)
-outer_frame.pack(fill="both", expand=True, padx=5, pady=5)
-
-table_frame = tk.Frame(outer_frame)
-table_frame.pack(fill="both", expand=True)
-
-# Create the status bar frame
-status_frame = tk.Frame(root, bd=1, relief="sunken")
-status_frame.grid(row=2, column=0, columnspan=4, sticky="ew")  # Adjust the grid location
-
-# Add status bar widgets
-lbl_record_count = tk.Label(status_frame, text="# of records: 0", anchor='w', padx=5)
-lbl_record_count.pack(side="left", fill="x", expand=True)
-
-lbl_email_link = tk.Label(status_frame, text="Contact Support", fg="blue", cursor="hand2", anchor='e', padx=5)
-lbl_email_link.pack(side="right", fill="x", expand=True)
-lbl_email_link.bind("<Button-1>", lambda e: open_mailto())
-
-# Load and display the records
-load_data()
-
-# Configure row and column weights for resizing
-root.grid_rowconfigure(0, weight=1)  # Form frame row
-root.grid_rowconfigure(1, weight=3)  # Table row
-root.grid_rowconfigure(2, weight=0)  # Status bar row
-
-root.grid_columnconfigure(0, weight=1)  # Main column
-root.grid_columnconfigure(1, weight=1)  # Main column
-root.grid_columnconfigure(2, weight=1)  # Main column
-root.grid_columnconfigure(3, weight=1)  # Chart column
-
-# Start the GUI event loop
-root.mainloop()
Index: V3_Backup.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/V3_Backup.py b/V3_Backup.py
new file mode 100644
--- /dev/null	(date 1725969039781)
+++ b/V3_Backup.py	(date 1725969039781)
@@ -0,0 +1,228 @@
+import sys
+import sqlite3
+from PyQt5.QtWidgets import (QApplication, QWidget, QMainWindow, QVBoxLayout, QHBoxLayout, QGridLayout, QLabel,
+                             QLineEdit, QPushButton, QMessageBox, QComboBox, QFrame, QTableWidget, QTableWidgetItem, QScrollArea)
+from PyQt5.QtCore import Qt
+from PyQt5.QtGui import QCursor
+import pandas as pd
+from datetime import datetime
+import webbrowser
+
+# Path to the SQLite database file
+db_file_path = r'X:\AEROSPACE\Aerospace YWG Scrap Parts Logbook\scrap_logbook.db'
+
+class crapLogbook(QMainWindow):
+    def __init__(self):
+        super().__init__()
+        self.setWindowTitle("Cadorath Aerospace Scrap Logbook")
+        self.setGeometry(100, 100, 1360, 768)
+
+        # Main widget and layout
+        self.central_widget = QWidget()
+        self.setCentralWidget(self.central_widget)
+        self.main_layout = QVBoxLayout(self.central_widget)
+
+        # Form layout
+        self.form_layout = QGridLayout()
+        self.main_layout.addLayout(self.form_layout)
+
+        # Table frame
+        self.table_frame = QFrame(self)
+        self.table_layout = QVBoxLayout(self.table_frame)
+        self.main_layout.addWidget(self.table_frame)
+
+        # Status bar frame
+        self.status_bar = QFrame(self)
+        self.status_layout = QHBoxLayout(self.status_bar)
+        self.main_layout.addWidget(self.status_bar)
+
+        # Form Elements
+        self.setup_form_elements()
+
+        # Status bar elements
+        self.setup_status_bar()
+
+        # Table
+        self.setup_table()
+
+        # Initialize database and load records
+        self.initialize_db()
+        self.load_data()
+
+    def setup_form_elements(self):
+        # Date
+        self.label_date = QLabel("*Date (YYYY-MM-DD):", self)
+        self.label_date.setStyleSheet("color: red;")
+        self.form_layout.addWidget(self.label_date, 0, 0)
+
+        self.entry_date = QLineEdit(self)
+        self.form_layout.addWidget(self.entry_date, 0, 1)
+
+        self.btn_date = QPushButton("ðŸ“…", self)
+        self.btn_date.clicked.connect(self.insert_current_date)
+        self.form_layout.addWidget(self.btn_date, 0, 2)
+
+        # W/O
+        self.label_wo = QLabel("W/O:", self)
+        self.form_layout.addWidget(self.label_wo, 1, 0)
+
+        self.entry_wo = QLineEdit(self)
+        self.form_layout.addWidget(self.entry_wo, 1, 1)
+
+        # Part Number
+        self.label_part_number = QLabel("Part Number:", self)
+        self.form_layout.addWidget(self.label_part_number, 2, 0)
+
+        self.entry_part_number = QLineEdit(self)
+        self.form_layout.addWidget(self.entry_part_number, 2, 1)
+
+        # Part Description
+        self.label_part_description = QLabel("Part Description:", self)
+        self.form_layout.addWidget(self.label_part_description, 3, 0)
+
+        self.entry_part_description = QLineEdit(self)
+        self.form_layout.addWidget(self.entry_part_description, 3, 1)
+
+        # Serial Number
+        self.label_serial_number = QLabel("Serial Number:", self)
+        self.form_layout.addWidget(self.label_serial_number, 4, 0)
+
+        self.entry_serial_number = QLineEdit(self)
+        self.form_layout.addWidget(self.entry_serial_number, 4, 1)
+
+        # Initials
+        self.label_initials = QLabel("*Initials:", self)
+        self.label_initials.setStyleSheet("color: red;")
+        self.form_layout.addWidget(self.label_initials, 5, 0)
+
+        self.entry_initials = QLineEdit(self)
+        self.form_layout.addWidget(self.entry_initials, 5, 1)
+
+        # Remarks
+        self.label_remarks = QLabel("Remarks:", self)
+        self.form_layout.addWidget(self.label_remarks, 6, 0)
+
+        self.entry_remarks = QLineEdit(self)
+        self.form_layout.addWidget(self.entry_remarks, 6, 1)
+
+        # Buttons
+        self.btn_submit = QPushButton("Submit", self)
+        self.btn_submit.clicked.connect(self.submit_data)
+        self.form_layout.addWidget(self.btn_submit, 7, 0)
+
+        self.btn_clear = QPushButton("Clear", self)
+        self.btn_clear.clicked.connect(self.clear_form)
+        self.form_layout.addWidget(self.btn_clear, 7, 1)
+
+    def setup_status_bar(self):
+        self.lbl_record_count = QLabel("Total records: 0", self)
+        self.status_layout.addWidget(self.lbl_record_count)
+
+        self.record_selection = QComboBox(self)
+        self.record_selection.addItems(['50', '100', '500', '1000', 'ALL'])
+        self.record_selection.currentIndexChanged.connect(self.on_records_change)
+        self.status_layout.addWidget(self.record_selection)
+
+        self.lbl_email_link = QLabel('<a href="mailto:alex.jessup@cadorath.com?subject=Scrap%20Log%20Issue">Contact Support</a>', self)
+        self.lbl_email_link.setOpenExternalLinks(True)
+        self.status_layout.addWidget(self.lbl_email_link)
+
+    def setup_table(self):
+        self.table_widget = QTableWidget(self)
+        self.table_layout.addWidget(self.table_widget)
+
+    def initialize_db(self):
+        conn = sqlite3.connect(db_file_path)
+        cursor = conn.cursor()
+        cursor.execute('''
+            CREATE TABLE IF NOT EXISTS scrap_logbook (
+                id INTEGER PRIMARY KEY,
+                date TEXT NOT NULL,
+                wo TEXT,
+                part_number TEXT,
+                part_description TEXT,
+                serial_number TEXT,
+                initials TEXT NOT NULL,
+                remarks TEXT
+            )
+        ''')
+        conn.commit()
+        conn.close()
+
+    def submit_data(self):
+        date = self.entry_date.text().strip()
+        initials = self.entry_initials.text().strip()
+
+        if not date or not initials:
+            missing_fields = []
+            if not date:
+                missing_fields.append("Date")
+            if not initials:
+                missing_fields.append("Initials")
+            QMessageBox.warning(self, "Missing Information", f"Please fill out the following required field(s): {', '.join(missing_fields)}")
+            return
+
+        try:
+            datetime.strptime(date, '%Y-%m-%d')
+        except ValueError:
+            QMessageBox.warning(self, "Invalid Date", "Please enter the date in YYYY-MM-DD format.")
+            return
+
+        wo = self.entry_wo.text().strip()
+        part_number = self.entry_part_number.text().strip()
+        part_description = self.entry_part_description.text().strip()
+        serial_number = self.entry_serial_number.text().strip()
+        remarks = self.entry_remarks.text().strip()
+
+        conn = sqlite3.connect(db_file_path)
+        cursor = conn.cursor()
+        cursor.execute('''
+            INSERT INTO scrap_logbook (date, wo, part_number, part_description, serial_number, initials, remarks)
+            VALUES (?, ?, ?, ?, ?, ?, ?)
+        ''', (date, wo, part_number, part_description, serial_number, initials, remarks))
+        conn.commit()
+        conn.close()
+
+        self.load_data()
+
+    def load_data(self):
+        conn = sqlite3.connect(db_file_path)
+        df = pd.read_sql_query('''
+            SELECT date, wo, part_number, part_description, serial_number, initials, remarks
+            FROM scrap_logbook ORDER BY date DESC
+        ''', conn)
+        conn.close()
+
+        self.table_widget.setRowCount(len(df))
+        self.table_widget.setColumnCount(len(df.columns))
+        self.table_widget.setHorizontalHeaderLabels(df.columns)
+
+        for i, row in df.iterrows():
+            for j, value in enumerate(row):
+                self.table_widget.setItem(i, j, QTableWidgetItem(str(value)))
+
+    def clear_form(self):
+        self.entry_date.clear()
+        self.entry_wo.clear()
+        self.entry_part_number.clear()
+        self.entry_part_description.clear()
+        self.entry_serial_number.clear()
+        self.entry_initials.clear()
+        self.entry_remarks.clear()
+
+    def insert_current_date(self):
+        current_date = datetime.now().strftime('%Y-%m-%d')
+        self.entry_date.setText(current_date)
+
+    def on_records_change(self):
+        selected_value = self.record_selection.currentText()
+        # Implement record loading logic based on selection (optional)
+
+def main():
+    app = QApplication(sys.argv)
+    window = ScrapLogbook()
+    window.show()
+    sys.exit(app.exec_())
+
+if __name__ == "__main__":
+    main()
diff --git a/db_version_Backup.py b/V2.py
rename from db_version_Backup.py
rename to V2.py
diff --git a/main.py b/V1.py
rename from main.py
rename to V1.py
diff --git a/main_backup.py b/V1_Backup.py
rename from main_backup.py
rename to V1_Backup.py
